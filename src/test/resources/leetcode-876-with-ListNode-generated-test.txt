import java.util.*;
import java.util.regex.*;
import java.util.stream.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class SolutionTest {

    Solution solution = new Solution();

    @Test
    void case1() {
        ListNode expected = toListNode("[3,4,5]");
        ListNode actual = solution.middleNode(toListNode("[1,2,3,4,5]"));

        assertEquals(expected.val, actual.val);
    }

    @Test
    void case2() {
        ListNode expected = toListNode("[4,5,6]");
        ListNode actual = solution.middleNode(toListNode("[1,2,3,4,5,6]"));

        assertEquals(expected.val, actual.val);
    }








    //See https://leetcode.com/problems/recover-binary-search-tree/discuss/32539/Tree-Deserializer-and-Visualizer-for-Python/465627
    ListNode toListNode(String rawInput) {
        rawInput = rawInput.replaceAll("\\[", "");
        rawInput = rawInput.replaceAll("\\]", "");
        rawInput = rawInput.trim();

        List<Integer> list = new ArrayList<>();
        StringTokenizer st = new StringTokenizer(rawInput, " ,");
        while (st.hasMoreTokens()) {
            list.add(Integer.parseInt(st.nextToken()));
        }

        ListNode listNode = null;
        for (int k = list.size() - 1; k >= 0; k--) {
            ListNode node = new ListNode(list.get(k));
            node.next = listNode;
            listNode = node;
        }
        return listNode;
    }
}